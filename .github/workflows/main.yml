name: Integración y Despliegue Continuo

on:
  push:
    branches:
      - develop
      - feature/**
      - hotfix/**
      - release/**
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Clona el repositorio en el runner
      - uses: actions/checkout@v3
      
      # Configura el entorno de Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Usar Node.js 20 para tener soporte actualizado

      # Instala las dependencias de npm
      - name: Instalar Dependencias
        run: npm install # Verifica la compatibilidad de los paquetes con Node.js 20

      # Ejecuta las pruebas definidas en package.json
      - name: Ejecutar Pruebas
        run: npm test # Ajusta este comando según tus scripts de pruebas

      # Configura Jira CLI si necesitas integrar con Jira
      - name: Configurar Jira
        uses: atlassian/gajira-cli@v3
        with:
          version: '1.0.27'  # Especifica la versión de Jira CLI si es necesario

  deploy:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/heads/release/') && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      # Clona el repositorio en el runner
      - uses: actions/checkout@v3

      # Configura el entorno de Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'  # Mantener consistencia al usar Node.js 20 en todas las operaciones de construcción y despliegue
      
      # Ejecuta el script de build definido en package.json
      - name: Construir
        run: npm run build # Asegúrate de que el proceso de construcción sea compatible con Node.js 20

       # Ejecuta el script de build definido en package.json
      - name: Construir
        run: npm run build:win # Asegúrate de que el proceso de construcción sea compatible con Node.js 20
        

      # Marcador de posición para el proceso real de despliegue
      # Reemplaza esto con tus comandos reales de despliegue
      - name: Desplegar a Producción
        run: echo "Desplegando a producción"
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # Usa los secretos de GitHub para tokens de acceso seguro

